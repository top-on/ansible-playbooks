- name: "Setup development tools."
  hosts: localhost
  connection: local
  tasks:
    # apt
    - name: apt - update
      apt:
        upgrade: no
        update_cache: yes
        cache_valid_time: 3600 # caching time: 1 hour
      become: yes
    - name: apt - install dev tools
      apt:
        name:
          - pipx
          - fish
          - newsboat  # RSS reader
        state: latest
      become: yes

    # snap
    - name: snap - install snap
      apt:
        name:
          - snapd
        state: latest
      become: yes
    - name: snap - install vscode
      snap:
        name: code
        classic: yes
      become: yes
    - name: snap - install vscode insiders
      snap:
        name: code-insiders
        classic: yes
      become: yes

    # install pyenv (and python build dependencies)
    - name: pyenv - install
      shell: |
        which pyenv || curl https://pyenv.run | bash
        grep -qxF 'eval "$(pyenv init -)"' ~/.bashrc || echo '# pyenv configuration' >> ~/.bashrc
        grep -qxF 'eval "$(pyenv init -)"' ~/.bashrc || echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bashrc
        grep -qxF 'eval "$(pyenv init -)"' ~/.bashrc || echo 'command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bashrc
        grep -qxF 'eval "$(pyenv init -)"' ~/.bashrc || echo 'eval "$(pyenv init -)"' >> ~/.bashrc
    - name: apt - install python build dependencies
      apt:
        name:
          - make
          - build-essential
          - libssl-dev
          - zlib1g-dev
          - libbz2-dev
          - libreadline-dev
          - libsqlite3-dev
          - wget
          - curl
          - llvm
          - libncursesw5-dev
          - xz-utils
          - tk-dev
          - libxml2-dev
          - libxmlsec1-dev
          - libffi-dev
          - liblzma-dev
        state: latest
      become: yes

    # install poetry
    - name: poetry - install
      shell: |
        which poetry || curl -sSL https://install.python-poetry.org | python3 -

    # configure fish shell
    - name: fish - create config folder
      file:
        path: ~/.config/fish
        state: directory
    - name: fish - write config file
      copy:
        src: config/config.fish
        dest: ~/.config/fish/config.fish

    # configure newsboat RSS reader
    - name: newsboat - create config folder
      file:
        path: ~/.newsboat/
        state: directory
    - name: newsboat - set urls
      copy:
        src: config/newsboat/urls
        dest: ~/.newsboat/urls
    - name: newsboat - set config
      copy:
        src: config/newsboat/config
        dest: ~/.newsboat/config
